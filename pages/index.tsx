import Terminal, { Command } from "components/terminal/command";
import type { GetStaticProps, InferGetStaticPropsType } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import LayoutDefault from "components/layout/default";
import { PageHomeAttributes, PageHomeResponse } from "lib/api/api";
import { fetchAPI } from "lib/api/client";
import { CSSTransition } from "react-transition-group";
import HeaderDefault from "components/header/default";

const ANIMATION_TIME_MS = 300;

function Home({ page }: InferGetStaticPropsType<typeof getStaticProps>) {
  const firstCommands: Array<Command> = [
    {
      text: "> Qtor load website",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "> installing components...",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "> start security check...",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "> downloading assets...",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "> analyzing assets...",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "> compiling client...",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "✔ analyze complete",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "✔ compilation complete",
      loadingTime: ANIMATION_TIME_MS,
    },
    {
      text: "✔ installation complete",
      loadingTime: ANIMATION_TIME_MS,
    },
  ];
  // const secondCommands: Array<Command> = [
  //   {
  //     text: '✔ installation complete',
  //     loadingTime: 1000,
  //   },
  // ]
  // const [step, setStep] = useState(1);
  const [displayHeader, setDisplayHeader] = useState(false);
  const [displayTerminal, setDisplayTerminal] = useState(true);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <LayoutDefault>

            {displayTerminal && (
                      <div className="py-10">
                      <div className="px-4 mx-auto space-y-6 max-w-7xl sm:px-6 lg:px-8">
              <Terminal
                id={"step1"}
                commandList={firstCommands}
                onCompletion={() => {
                  // setStep(2);
                  setDisplayHeader(true);
                }}
              ></Terminal>
              </div>
              </div>
            )}
            <CSSTransition
              in={displayHeader}
              timeout={500}
              classNames="fade"
              unmountOnExit
              onEnter={() => setDisplayTerminal(false)}
              onExited={() => setDisplayTerminal(true)}
            >
              <>
                <HeaderDefault></HeaderDefault>
                <h1 className="block text-indigo-600 xl:inline test">
                  {page.h1}
                </h1>
              </>
            </CSSTransition>
            {/* {step > 1 && <Terminal id={'step2'} commandList={secondCommands} onCompletion={()=> {setDisplayHeader(true)}}></Terminal>} */}

      </LayoutDefault>

      <footer>
        {/* <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a> */}
      </footer>
    </div>
  );
}

export const getStaticProps: GetStaticProps<{
  page: PageHomeAttributes;
}> = async (context) => {
  console.log(context);
  const { locale } = context;
  const pageData: PageHomeResponse = await fetchAPI("/page-home", { locale });

  return {
    props: {
      page: pageData.data.attributes,
    },
  };
};

export default Home;
